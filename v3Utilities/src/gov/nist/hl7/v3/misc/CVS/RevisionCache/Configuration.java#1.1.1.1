/*
 * Configuration.java
 *
 * Created on August 11, 2006, 10:00 AM
 *
 * To change this template, choose Tools | Template Manager
 * and open the template in the editor.
 */

package gov.nist.hl7.v3.misc;

import javax.servlet.ServletConfig;


/**
 * 
 * This class represents the configuration of this applications and contains
 * variables such as the location of the database, the name of the database,
 * the port of the MLLP listener, the location of the SMTP mailbox, etc.
 * @author mccaffrey
 */
public class Configuration {
    
    private String databaseHostname = null;     // 129.6.58.91:5433
    private String databaseUsername = null;     // hl7applrole
    private String databasePassword = null;     // """
    private String databaseName = null;         // postgres_v8_hl7
    private String mllpPort = null;             // 8087
    private String smtpServer = null;           // localhost
    private String smtpPopServer = null;        // localhost/pop.gmail.com
    private String smtpPopPort = null;          // 995
    private boolean smtpPopSecure = false;      // false
    private String smtpEmailAddressOutgoing = null;     // v3sender@sst116
    private String smtpEmailUsernameIncoming = null;    // v3receiver
    private String smtpEmailPasswordIncoming = null;    // dummy
    private String smtpOutgoingSubjectLine = null;      // NIST V3 Laboratory Reference Implementation
    private int smtpMailboxCheckTime = 60000;       
    
    /**
     * Constructs an empty Configuration object.
     */
    public Configuration() {}
    
    /**
     * Builds a new instance of Configuration based on the init parameters contained
     * within a ServletConfig object.
     * @param servletConfig The ServletConfig which should contain the init parameters which is what will 
     * be used to create the Configuration object.
     */
    public Configuration(ServletConfig servletConfig) {
        this.setDatabaseHostname(servletConfig.getInitParameter("databaseHostname"));
        this.setDatabaseUsername(servletConfig.getInitParameter("databaseUsername"));
        this.setDatabasePassword(servletConfig.getInitParameter("databasePassword"));
        this.setDatabaseName(servletConfig.getInitParameter("databaseName"));
        this.setMllpPort(servletConfig.getInitParameter("mllpPort"));
        this.setSmtpServer(servletConfig.getInitParameter("smtpServer"));
        this.setSmtpPopServer(servletConfig.getInitParameter("smtpPopServer"));
        this.setSmtpPopPort(servletConfig.getInitParameter("smtpPopPort"));
        String secure = servletConfig.getInitParameter("smtpPopSecure");
        if(secure.equalsIgnoreCase("true"))
            this.setSmtpPopSecure(true);
        else
            this.setSmtpPopSecure(false);        
        this.setSmtpEmailAddressOutgoing(servletConfig.getInitParameter("smtpEmailAddressOutgoing"));
        this.setSmtpEmailUsernameIncoming(servletConfig.getInitParameter("smtpEmailUsernameIncoming"));
        this.setSmtpEmailPasswordIncoming(servletConfig.getInitParameter("smtpEmailPasswordIncoming"));
        this.setSmtpOutgoingSubjectLine(servletConfig.getInitParameter("smtpOutgoingSubjectLine"));         
        try {
            this.setSmtpMailboxCheckTime(Integer.parseInt(servletConfig.getInitParameter("smtpMailboxCheckTime")));            
        } catch (NumberFormatException nfe) {
            // then Mailbox Check Time remains the default...
        }
    }

    /**
     * Gets the Database Hostname.
     * @return The Database Hostname.
     */
    public String getDatabaseHostname() {
        return databaseHostname;
    }

    /**
     * Sets the Database Hostname.
     * @param databaseHostname The Database Hostname
     */
    public void setDatabaseHostname(String databaseHostname) {
        this.databaseHostname = databaseHostname;
    }

    /**
     * Gets the Database Username.
     * @return The Database Username
     */
    public String getDatabaseUsername() {
        return databaseUsername;
    }

    /**
     * Sets the Database Username.
     * @param databaseUsername The Database Username
     */
    public void setDatabaseUsername(String databaseUsername) {
        this.databaseUsername = databaseUsername;
    }

    /**
     * Gets the Database Password.
     * @return The Database Password
     */
    public String getDatabasePassword() {
        return databasePassword;
    }

    /**
     * Sets the Database Password.
     * @param databasePassword The Database Password
     */
    public void setDatabasePassword(String databasePassword) {
        this.databasePassword = databasePassword;
    }

    /**
     * Gets the Database Name.
     * @return The Database Name
     */
    public String getDatabaseName() {
        return databaseName;
    }

    /**
     * Sets the Database Name.
     * @param databaseName The Database Name.
     */
    public void setDatabaseName(String databaseName) {
        this.databaseName = databaseName;
    }

    /**
     * Gets the MLLP Port.
     * @return The MLLP Port
     */
    public String getMllpPort() {
        return mllpPort;
    }

    /**
     * Sets the MLLP Port.
     * @param mllpPort The MLLP Port
     */
    public void setMllpPort(String mllpPort) {
        this.mllpPort = mllpPort;
    }

    /**
     * Gets the SMTP Server.
     * @return The SMTP Server
     */
    public String getSmtpServer() {
        return smtpServer;
    }

    /**
     * Sets the SMTP Server.
     * @param smtpServer Sets the SMTP Server.
     */
    public void setSmtpServer(String smtpServer) {
        this.smtpServer = smtpServer;
    }

    /**
     * Gets the Outgoing Email Address for the SMTP service.
     * @return The Outgoing Email Address for the SMTP service
     */
    public String getSmtpEmailAddressOutgoing() {
        return smtpEmailAddressOutgoing;
    }

    /**
     * Sets the Outgoing Email Address for the SMTP service
     * @param smtpEmailAddressOutgoing The Outgoing Email Address
     */
    public void setSmtpEmailAddressOutgoing(String smtpEmailAddressOutgoing) {
        this.smtpEmailAddressOutgoing = smtpEmailAddressOutgoing;
    }

    /**
     * Gets the incoming username for the SMTP service.
     * @return The incoming username for the SMTP service
     */
    public String getSmtpEmailUsernameIncoming() {
        return smtpEmailUsernameIncoming;
    }

    /**
     * Sets the incoming username for the SMTP service.
     * @param smtpEmailUsernameIncoming The incoming username
     */
    public void setSmtpEmailUsernameIncoming(String smtpEmailUsernameIncoming) {
        this.smtpEmailUsernameIncoming = smtpEmailUsernameIncoming;
    }

    /**
     * Gets the Subject Line to use for outgoing SMTP messages.
     * @return The Subject Line to use for outgoing SMTP messages
     */
    public String getSmtpOutgoingSubjectLine() {
        return smtpOutgoingSubjectLine;
    }

    /**
     * Sets the Subject Line to use for outgoing SMTP messages.
     * @param smtpOutgoingSubjectLine The Subject Line to use for outgoing SMTP messages
     */
    public void setSmtpOutgoingSubjectLine(String smtpOutgoingSubjectLine) {
        this.smtpOutgoingSubjectLine = smtpOutgoingSubjectLine;
    }

    public String getSmtpEmailPasswordIncoming() {
        return smtpEmailPasswordIncoming;
    }

    public void setSmtpEmailPasswordIncoming(String smtpEmailPasswordIncoming) {
        this.smtpEmailPasswordIncoming = smtpEmailPasswordIncoming;
    }

    public String getSmtpPopServer() {
        return smtpPopServer;
    }

    public void setSmtpPopServer(String smtpPopServer) {
        this.smtpPopServer = smtpPopServer;
    }

    public String getSmtpPopPort() {
        return smtpPopPort;
    }

    public void setSmtpPopPort(String smtpPopPort) {
        this.smtpPopPort = smtpPopPort;
    }

    public boolean isSmtpPopSecure() {
        return smtpPopSecure;
    }

    public void setSmtpPopSecure(boolean smtpPopSecure) {
        this.smtpPopSecure = smtpPopSecure;
    }

    public int getSmtpMailboxCheckTime() {
        return smtpMailboxCheckTime;
    }

    public void setSmtpMailboxCheckTime(int smtpMailboxCheckTime) {
        this.smtpMailboxCheckTime = smtpMailboxCheckTime;
    }
    
}
